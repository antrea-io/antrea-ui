# Configuration for the Antrea UI frontend container.
frontend:
  # -- Container image to use for the Antrea UI frontend.
  image:
    repository: "antrea/antrea-ui-frontend"
    pullPolicy: "IfNotPresent"
    tag: ""
  # -- Container port on which the frontend will listen.
  port: 3000
  # -- Resource requests and limits for the frontend container.
  resources: {}

# Configuration for the Antrea UI backend container.
backend:
  # -- Container image to use for the Antrea UI backend.
  image:
    repository: "antrea/antrea-ui-backend"
    pullPolicy: "IfNotPresent"
    tag: ""
  # -- Container port on which the backend will listen.
  port: 8080
  # -- Resource requests and limits for the backend container.
  resources: {}

security:
  # -- (bool) Set the Secure attribute for Antrea UI cookies. The attribute is set by default when HTTPS is
  # enabled in Antrea UI (by setting https.enable to true). When using an Ingress to terminate TLS,
  # you should explicitly set cookieSecure to true for security hardening purposes.
  # @default -- same as https.enable
  cookieSecure:

# HTTPS configuration for the Antrea UI.
https:
  # -- Enable HTTPS (only) for accessing the web UI. When using an Ingress to terminate TLS, you do
  # not need to enable HTTPS here.
  enable: false
  # -- Method for generating the TLS certificate for the web server. We support "auto", "user",
  # "userCA", and "secret". With "auto", Helm will generate a new self-signed certificate every time
  # the template function is executed. With "user", the user is responsible for providing a
  # certificate and key, which will be used directly. With "userCA", the user is responsible for
  # providing a CA certificate and key, which will be used to generate a signed certificate to be
  # used by the web server. With "secret", the user is responsible for providing a secret of type
  # kubernetes.io/tls, in the Namespace of the release. The secret must include the tls.crt and
  # tls.key data fields.
  method: "auto"
  # -- Configure automatic TLS certificate generation with Helm.
  auto:
    # -- Common name to use in the certificate.
    commonName: "localhost"
    # -- IP addresses to use in the certificate.
    ipAddresses: []
    # -- DNS names to use in the certificate.
    dnsNames: []
    # -- Number of days for which the certificate will be valid. There is no automatic rotation with
    # this method.
    daysValid: 365
  # -- Use the provided TLS certificate and key.
  user:
    # -- Certificate (base64-encoded PEM format)
    cert: ""
    # -- Private key (base64-encoded PEM format)
    key: ""
  # -- Use the provided CA certificate and key to generate a signed certificate.
  userCA:
    # -- CA certificate (base64-encoded PEM format)
    cert: ""
    # -- CA private key (base64-encoded PEM format)
    key: ""
    # -- Common name to use in the certificate.
    commonName: "localhost"
    # -- IP addresses to use in the certificate.
    ipAddresses: []
    # -- DNS names to use in the certificate.
    dnsNames: []
    # -- Number of days for which the certificate will be valid. There is no automatic rotation with
    # this method.
    daysValid: 365
  secret:
    # -- Name of the secret containing the PEM data for the certificate and private key to
    # use. Secret must be of type kubernetes.io/tls. The typical use case is a secret generated by
    # cert-manager. The secret must exist in the Namespace of the Helm release (typically,
    # kube-system).
    secretName: "antrea-ui-tls"

# IPv6 configuration for the Antrea UI.
ipv6:
  # -- Enable IPv6 for accessing the web UI. Even if the cluster does not support IPv6, you do not
  # typically need to set this value to false.
  enable: true

# Configuration for the Antrea UI Service.
service:
  # --- The type of Service used for Antrea UI access, either ClusterIP, NodePort or LoadBalancer.
  type: ClusterIP
  # -- The port on which the Service is exposed.
  port: 3000
  # --- The Node port to use when the Service type is NodePort or LoadBalancer.
  nodePort: 31234
  # -- Annotations to be added to the Service.
  annotations: {}
  # -- Labels to be added to the Service.
  labels: {}
  # -- Override the ExternalTrafficPolicy for the Service. Set it to Local to route Service traffic
  # to Node-local endpoints only.
  externalTrafficPolicy:

# -- Node selector for the Antrea UI Pod.
nodeSelector:
  kubernetes.io/os: linux

# -- Affinity for the Antrea UI Pod.
affinity: {}

# -- Tolerations for the Antrea UI Pod.
tolerations: {}

# -- Annotations to be added to the Antrea UI Pod.
podAnnotations: {}
# -- Labels to be added to the Antrea UI Pod.
podLabels: {}
